using System.Collections.Generic;
using UnityEngine;

/// <summary>
/// Generated by ChatGTP originally. Edited to suit my implementation.
/// 04/01/2024
/// </summary>
[CreateAssetMenu(fileName = "NewObjective", menuName = "Scriptable Objects/Objectives/Objective")]
public class SO_Objective : ScriptableObject
{
    [System.Serializable]
    public class ObjectiveStep
    {
        public string stepDescription;
        public List<SO_ItemClass> requiredItems = new List<SO_ItemClass>();
        public int targetAmount;
        public int currentAmount;
    }

    public string objectiveName;
    public string description;
    public bool isCompleted;
    public List<ObjectiveStep> steps = new List<ObjectiveStep>();
    InventoryManager inventory;

    public void MarkAsCompleted()
    {
        isCompleted = true;
    }

    public void UpdateStepProgress(int stepIndex, int amount)
    {
        if (steps != null && stepIndex >= 0 && stepIndex < steps.Count)
        {
            steps[stepIndex].currentAmount += amount;
            CheckObjectiveCompletion();
        }
        else
        {
            Debug.LogWarning("Invalid step index.");
        }
    }

    private void CheckObjectiveCompletion()
    {
        bool allStepsCompleted = true;

        foreach (var step in steps)
        {
            int totalCollected = step.currentAmount;

            foreach (var requiredItem in step.requiredItems)
            {
                var collectedItem = inventory.Contains(requiredItem);

                if (collectedItem != null)
                {
                    totalCollected += collectedItem.quantity;
                }
            }

            if (totalCollected < step.targetAmount)
            {
                allStepsCompleted = false;
                break;
            }
        }

        if (allStepsCompleted)
        {
            MarkAsCompleted();
            Debug.Log($"{objectiveName} completed!");
        }
    }
}